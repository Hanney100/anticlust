% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/compute-objective.R
\name{get_objective}
\alias{get_objective}
\title{Compute objective value for the (anti)clustering problem}
\usage{
get_objective(features, anticlusters, objective)
}
\arguments{
\item{features}{A data.frame, matrix or vector representing the
features that are used in (anti)clustering.}

\item{anticlusters}{A vector representing the anticluster affiliation}

\item{objective}{The objective to be maximized, either "distance" or
"variance".}
}
\value{
Scalar, the objective value; either the total
  within-cluster variance (if objective == "variance") or
  the total sum of within-cluster pointwise distances
  (if objective == "distance")
}
\description{
Compute objective value for the (anti)clustering problem
}
\examples{

features <- matrix(rnorm(1000, 100, 15), ncol = 2)
n_elements <- 15
m_features <- 2
n_clusters <- 3
features <- matrix(rnorm(n_elements * m_features), ncol = m_features)
clusters_exact <- clustering(features, n_clusters, method = "exact", standardize = FALSE)
clusters_heuristic <- clustering(features, n_clusters, method = "heuristic", standardize = FALSE)
# Exact clustering minimizes distance criterion
get_objective(features, clusters_exact, "distance")
get_objective(features, clusters_heuristic, "distance")
get_objective(features, clusters_exact, "variance")
# Heuristic clustering tries to minimize variance criterion
get_objective(features, clusters_heuristic, "variance")

# Plot the clustering
par(mfrow = c(1, 2))
draw_assignment(features, clusters_exact)
draw_assignment(features, clusters_heuristic)

}
\references{
H. Späth, “Anticlustering: Maximizing the variance criterion,”
Control and Cybernetics, vol. 15, no. 2, pp. 213–218, 1986.
}
