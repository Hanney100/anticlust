% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ilp-solve.R
\name{solve_ilp}
\alias{solve_ilp}
\title{Solve the ILP formulation of distance anticlustering}
\usage{
solve_ilp(ilp, solver, objective = "max")
}
\arguments{
\item{ilp}{An object representing the ILP formulation of the
instance, returned by `item_assign_ilp`}

\item{solver}{A string identifing the solver to be used ("Rglpk",
"gurobi", or "Rcplex")}

\item{objective}{A string identifying whether the objective function
of the ILP should be maximized ("max") or minimized
("min"). Maximizing creates similar groups (i.e., solves item
assignment), minimizing creates distinct clusters (i.e., solves
cluster editing).}
}
\value{
A `list` having two entries: `x` is the vector of optimal
  coefficients for all decision variables. `obj` is the optimal
  objective value.
}
\description{
Usually it will be advised to call the higher level function
`distance_anticlustering`. By setting the `objective` parameter to "min", this
function solves weighted cluster editing instead of anticlustering.
}
\details{
To use this function, a linear programming solver must
 be installed and usable from R. The open source GNU linear
 programming kit (called from the package `Rglpk`) or one of the
 commercial solvers gurobi (called from the package `gurobi`) or
 IBM CPLEX (called from the package `Rcplex`) can be used. A license
 is needed for the commercial solvers. One of the interface packages
 must be installed.
}
