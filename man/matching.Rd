% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/matching-wrapper.R
\name{matching}
\alias{matching}
\title{Matching}
\usage{
matching(features, distances, p, groups = NULL)
}
\arguments{
\item{features}{A numeric vector, matrix or data.frame of data
points.  Rows correspond to elements and columns correspond to
features. A vector represents a single numeric feature.}

\item{distances}{Alternative data argument that can be used if
\code{features} is not passed. An N x N matrix representing the
pairwise dissimilarities between N elements. Larger values
indicate higher dissimilarity. Can be an object of class
\code{dist} (e.g., returned by \code{\link{dist}} or
\code{\link{as.dist}}) or a \code{matrix} where the entries of
the upper and lower triangular matrix represent the pairwise
dissimilarities.}

\item{p}{The size of the groups; the default is 2, in which case the 
function returns pairs.}

\item{groups}{An optional vector inducing grouping restrictions. If the 
vector is passed, the argument \code{p} is ignored and matches are
sought between elements of different groups.}
}
\value{
An integer vector encoding the matches.
}
\description{
Conduct bipartite and unrestricted matching to find pairs or larger 
groups of similar elements.
}
\details{
This function actually implements the same algorithm as \code{\link{balanced_clustering}}
but it differs with regard to the interface: Here, we specify the size of the groups.
Moreover, it is possible to specify grouping restrictions enabling K-partite matching.
}
\examples{

# Find triplets
N <- 300
lds <- data.frame(f1 = rnorm(N), f2 = rnorm(N))
triplets <- matching(lds, p = 3)
plot_clusters(lds, clustering = triplets, within_connection = TRUE)


# Match between different plant species
idx <- 1:100
matched <- matching(iris[idx, 1], p = 3, groups = iris[idx, 5])
plot_clusters(
  data.frame(group = as.numeric(iris[idx, 5]), feature = iris[idx, 1]), 
  clustering = matched, 
  within_connection = TRUE
)

}
\author{
Martin Papenberg \email{martin.papenberg@hhu.de}
}
