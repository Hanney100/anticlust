% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fast_anticlustering.R
\name{generate_exchange_partners}
\alias{generate_exchange_partners}
\title{Get exchange partners for fast_anticlustering()}
\usage{
generate_exchange_partners(
  n_exchange_partners,
  features = NULL,
  N = NULL,
  method = "RANN",
  categories = NULL
)
}
\arguments{
\item{n_exchange_partners}{The number of exchange partners per element}

\item{features}{The features for which nearest neighbours are sought. May be NULL if random exchange partners are generated.}

\item{N}{The number of elements for which exchange partners; can be \code{NULL} if \code{features} is passed (it is ignored if \code{features} is passed).}

\item{method}{Currently supports "RANN" and "random"}

\item{categories}{A vector, data.frame or matrix representing one
or several categorical constraints.}
}
\value{
A list of length \code{N}. Is usually used as input to the argument \code{exchange_partners} in \code{\link{fast_anticlustering}}.
  Then, the i'th element of the list contains the indices of the exchange partners that are used for the i'th element.
}
\description{
Get exchange partners for fast_anticlustering()
}
\examples{

generate_exchange_partners(5, N = 10, method = "random")
# may return less than 5 exchange partners if there are not enough members of the same category: 
generate_exchange_partners(5, N = 10, method = "random", categories = cbind(schaper2019$room, schaper2019$frequency))
# using nearest neighbour search (unlike RANN::nn2, this does not return the ID of the element itself as neighbour)
generate_exchange_partners(5, features = schaper2019[, 3:5], method = "RANN")[1:3]
# compare with RANN directly:
RANN::nn2(schaper2019[, 3:5], k = 5)$nn.idx[1:3, ]

}
