% Generated by roxygen2: do not edit by hand
% Please edit documentation in
%   R/wrapper-three-phase-search-dynamic-population-size.R
\name{three_phase_search_anticlustering}
\alias{three_phase_search_anticlustering}
\title{Three phase search with dynamic population size heuristic}
\usage{
three_phase_search_anticlustering(
  x,
  K,
  N,
  max_iterations = 100,
  upper_bound = NULL,
  lower_bound = NULL,
  beta_max = 15,
  time_limit = NULL,
  theta_max = NULL,
  theta_min = NULL,
  beta_min = NULL,
  eta_max = 3,
  alpha = 0.05
)
}
\arguments{
\item{K}{Number of anticlusters to be formed.}

\item{upper_bound}{Maximum number of elements in each anticluster. By default, anticlusters are of equal size, calculated as the total number of items divided by the number of clusters.}

\item{lower_bound}{Minimum number of elements in each anticluster. By default, anticlusters are of equal size, calculated as the total number of items divided by the number of clusters.}

\item{beta_max}{The algorithm begins with a pool of random initial solutions of size beta_max. 
Over time, the size of the solution pool decreases linearly until it reaches beta_min.}

\item{time_limit}{Maximum execution time of the algorithm (in seconds).}

\item{theta_max}{Parameter for the strength of undirected perturbation, which decreases linearly over time from theta_max to theta_min.}

\item{theta_min}{Parameter for the strength of undirected perturbation, which decreases linearly over time from theta_max to theta_min.}

\item{beta_min}{The minimum solution pool size the algorithm should reach before making a determination.}

\item{eta_max}{Parameter for}

\item{alpha}{Parameter for weitghing the discrimitation of a slighlty worse local optiomal child solution.}

\item{matrix}{The data input. Currently just a vector.}

\item{return}{results contains everzthing, including vector result and its cost}
}
\description{
This function implements the three phase search algorithm TPSPD for
anticlustering by Yang et al. (2022; <doi.org/10.1016/j.ejor.2022.02.003>).
The description of their algorithm is
given in Section 2 of their paper (in particular, see the
Pseudocode in Algorithm 1).
}
\note{
Important! for windows and linux there is a differnt definition of thie run time due to clock(),
so the time_limit acts differnetly depending on zour operating system
On windows it is the wall time, on linux the CPU time
}
\examples{

# Generate some random data
N <- 12
M <- 5
K <- 2
dat <- matrix(rnorm(N * M), ncol = M)
distances <- dist(dat)

# Perform three hase serach algorithm
ergebnis <- anticlust:::three_phase_search_anticlustering(dat, K, N)

# Compute objectives funtion
diversity_objective(distances, ergebnis$ergebnis)

# Compute comparision function
ergebnis2 <- anticlustering(distances, K=K, method="local-maximum", repetitions = 10)
diversity_objective(distances, ergebnis3)

# Compare both results
print(ergebnis$result)
print(ergebnis2)

}
\references{
Xiao Yang et al. “A three-phase search approach with dynamic population size for solving # nolint
the maximally diverse grouping problem”. In: European Journal of Operational Research
302.3 (2022). [SOURCE-CODE: https://raw.githubusercontent.com/toyamaailab/toyamaailab.github.io/main/resource/TPSDP_Code.zip],
 pp. 925–953. ISSN: 0377-2217. DOI: https://doi.org/10.1016/j.ejor.2022.02.003.
}
\author{
Hannah Hengelbrock \email{Hannah.Hengelbrock@hhu.de}, 
Martin Papenberg \email{martin.papenberg@hhu.de}
}
